import tkinter as tk
from tkinter import ttk
import random
import string

# ------------------------ Password Generator Logic ------------------------ #
def generate_password():
    length = password_length.get()

    # Collect selected character sets
    characters = ''
    if include_lowercase.get():
        characters += string.ascii_lowercase
    if include_uppercase.get():
        characters += string.ascii_uppercase
    if include_digits.get():
        characters += string.digits
    if include_symbols.get():
        characters += string.punctuation

    if not characters:
        result_label.config(text="Select at least one option!", fg="red")
        return

    password = ''.join(random.choice(characters) for _ in range(length))
    password_output.delete(0, tk.END)
    password_output.insert(0, password)
    result_label.config(text="Password generated!", fg="green")

def copy_to_clipboard():
    password = password_output.get()
    if password:
        main.clipboard_clear()
        main.clipboard_append(password)
        result_label.config(text="Copied to clipboard!", fg="blue")
    else:
        result_label.config(text="Nothing to copy!", fg="red")

# ------------------------ GUI Setup ------------------------ #
main = tk.Tk()
main.title("Password Generator")
main.geometry("400x350")
main.resizable(False, False)
main.configure(bg="#f2faff")

# Title
tk.Label(main, text="üîê Random Password Generator", font=("Arial", 14, "bold"), bg="#f2faff", fg="#007acc").pack(pady=10)

# Password length
tk.Label(main, text="Password Length:", font=("Arial", 10), bg="#f2faff").pack()
password_length = tk.IntVar(value=12)
length_slider = tk.Scale(main, from_=4, to=32, orient=tk.HORIZONTAL, variable=password_length, length=200)
length_slider.pack(pady=5)

# Options
include_lowercase = tk.BooleanVar(value=True)
include_uppercase = tk.BooleanVar(value=True)
include_digits = tk.BooleanVar(value=True)
include_symbols = tk.BooleanVar(value=False)

options_frame = tk.Frame(main, bg="#f2faff")
options_frame.pack(pady=5)

tk.Checkbutton(options_frame, text="Include Lowercase", variable=include_lowercase, bg="#f2faff").grid(row=0, column=0, sticky="w")
tk.Checkbutton(options_frame, text="Include Uppercase", variable=include_uppercase, bg="#f2faff").grid(row=1, column=0, sticky="w")
tk.Checkbutton(options_frame, text="Include Digits", variable=include_digits, bg="#f2faff").grid(row=0, column=1, sticky="w")
tk.Checkbutton(options_frame, text="Include Symbols", variable=include_symbols, bg="#f2faff").grid(row=1, column=1, sticky="w")

# Password output
password_output = tk.Entry(main, font=("Courier", 12), width=30, justify="center")
password_output.pack(pady=10)

# Buttons
button_frame = tk.Frame(main, bg="#f2faff")
button_frame.pack()

ttk.Button(button_frame, text="Generate", command=generate_password).grid(row=0, column=0, padx=10)
ttk.Button(button_frame, text="Copy", command=copy_to_clipboard).grid(row=0, column=1, padx=10)

# Result / status message
result_label = tk.Label(main, text="", font=("Arial", 10), bg="#f2faff")
result_label.pack(pady=5)

# Run the app
main.mainloop()
